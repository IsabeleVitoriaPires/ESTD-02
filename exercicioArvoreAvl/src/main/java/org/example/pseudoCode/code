estrutura no:
    chave    : inteiro
    esquerda : no
    direita  : no
    altura   : inteiro

FUNÇÃO altura(no):
    SE no = NULO ENTÃO
        RETORNA 0
    SENÃO
        RETORNA no.altura

FUNÇÃO atualizar_altura(no):
    SE no = NULO ENTÃO RETORNA
    altura_esquerda ← altura(no.esquerda)
    altura_direita  ← altura(no.direita)
    no.altura ← 1 + MÁXIMO(altura_esquerda, altura_direita)

FUNÇÃO fator_de_balanceamento(no):
    RETORNA altura(no.esquerda) − altura(no.direita)

FUNÇÃO rotacionar_para_direita(no):            // caso LL
    filho_esquerda ← no.esquerda
    subarvore_direita_do_filho_esquerda ← filho_esquerda.direita

    // girar
    filho_esquerda.direita ← no
    no.esquerda ← subarvore_direita_do_filho_esquerda

    // atualizar alturas
    atualizar_altura(no)
    atualizar_altura(filho_esquerda)

    RETORNA filho_esquerda

FUNÇÃO rotacionar_para_esquerda(no):           // caso RR
    filho_direita ← no.direita
    subarvore_esquerda_do_filho_direita ← filho_direita.esquerda

    // girar
    filho_direita.esquerda ← no
    no.direita ← subarvore_esquerda_do_filho_direita

    // atualizar alturas
    atualizar_altura(no)
    atualizar_altura(filho_direita)

    RETORNA filho_direita

FUNÇÃO inserir(raiz, nova_chave):
    // inserção padrão de BST
    SE raiz = NULO ENTÃO
        novo_no ← NOVO Nó
        novo_no.chave ← nova_chave
        novo_no.esquerda ← NULO
        novo_no.direita  ← NULO
        novo_no.altura   ← 1
        RETORNA novo_no
    FIMSE

    SE nova_chave < raiz.chave ENTÃO
        raiz.esquerda ← inserir(raiz.esquerda, nova_chave)
    SENÃO SE nova_chave > raiz.chave ENTÃO
        raiz.direita ← inserir(raiz.direita, nova_chave)
    SENÃO
        // chave repetida: não insere
        RETORNA raiz
    FIMSE

    // atualizar altura e verificar balanceamento
    atualizar_altura(raiz)
    balanceamento ← fator_de_balanceamento(raiz)

    // LL: pesado à esquerda e inseriu na subárvore esquerda-esquerda
    SE balanceamento > 1 E nova_chave < raiz.esquerda.chave ENTÃO
        RETORNA rotacionar_para_direita(raiz)

    // RR: pesado à direita e inseriu na subárvore direita-direita
    SE balanceamento < -1 E nova_chave > raiz.direita.chave ENTÃO
        RETORNA rotacionar_para_esquerda(raiz)

    // LR: pesado à esquerda e inseriu na subárvore esquerda-direita
    SE balanceamento > 1 E nova_chave > raiz.esquerda.chave ENTÃO
        raiz.esquerda ← rotacionar_para_esquerda(raiz.esquerda)
        RETORNA rotacionar_para_direita(raiz)

    // RL: pesado à direita e inseriu na subárvore direita-esquerda
    SE balanceamento < -1 E nova_chave < raiz.direita.chave ENTÃO
        raiz.direita ← rotacionar_para_direita(raiz.direita)
        RETORNA rotacionar_para_esquerda(raiz)

    // já balanceada
    RETORNA raiz
